#!/usr/bin/env python3
"""
Script pour analyser les diff√©rences entre fichiers accessibles et non accessibles.
"""

import ftplib
import requests
import time

def analyze_file_differences():
    """Analyse les diff√©rences entre fichiers accessibles et non accessibles"""
    print("üîç ANALYSE DES DIFF√âRENCES ENTRE FICHIERS:")
    
    # Configuration FTP
    ftp_host = "ftp.novaprint.tn"
    ftp_user = "cmtch@cmtch.online"
    ftp_password = "Anouar881984?"
    
    try:
        # Connexion FTP
        ftp = ftplib.FTP(ftp_host)
        ftp.login(ftp_user, ftp_password)
        ftp.cwd('/public_html/static/article_images')
        
        # Lister tous les fichiers avec d√©tails
        print("\nüìã CONTENU DU DOSSIER AVEC D√âTAILS:")
        ftp.retrlines('LIST', print)
        
        # Analyser les fichiers accessibles vs non accessibles
        print(f"\nüîç ANALYSE D√âTAILL√âE:")
        
        # Fichiers accessibles (d'apr√®s les tests pr√©c√©dents)
        accessible_files = [
            "default_article.jpg",
            "default_article.html", 
            "default_article.svg"
        ]
        
        # Fichiers non accessibles
        inaccessible_files = [
            "article_1.jpg",
            "article_2.jpg",
            "article_3.jpg",
            "test_simple.txt",
            "test_image.jpg",
            "simple.jpg"
        ]
        
        print(f"\nüìä FICHIERS ACCESSIBLES:")
        for file_name in accessible_files:
            print(f"   ‚úÖ {file_name}")
            # Analyser les d√©tails du fichier
            try:
                # Obtenir les d√©tails du fichier
                ftp.retrlines(f'LIST {file_name}', print)
            except:
                print(f"     ‚ö†Ô∏è Impossible d'obtenir les d√©tails")
        
        print(f"\nüìä FICHIERS NON ACCESSIBLES:")
        for file_name in inaccessible_files:
            print(f"   ‚ùå {file_name}")
            # Analyser les d√©tails du fichier
            try:
                # Obtenir les d√©tails du fichier
                ftp.retrlines(f'LIST {file_name}', print)
            except:
                print(f"     ‚ö†Ô∏è Impossible d'obtenir les d√©tails")
        
        # Test sp√©cial : Cr√©er une copie exacte de default_article.jpg
        print(f"\nüß™ TEST SP√âCIAL: Copie exacte de default_article.jpg")
        
        try:
            # Lire default_article.jpg
            file_data = []
            ftp.retrbinary("RETR default_article.jpg", file_data.append)
            default_content = b''.join(file_data)
            
            # Cr√©er une copie avec un nom diff√©rent
            test_filename = "copy_default.jpg"
            ftp.storbinary(f'STOR {test_filename}', file_data)
            print(f"   ‚úÖ Copie cr√©√©e: {test_filename}")
            
            # Attendre la synchronisation
            print("   ‚è≥ Attente de 5 secondes...")
            time.sleep(5)
            
            # Tester l'accessibilit√©
            test_url = f"https://www.cmtch.online/static/article_images/{test_filename}"
            response = requests.head(test_url, timeout=10)
            print(f"   üåê Test d'accessibilit√©: {response.status_code}")
            
            if response.status_code == 200:
                print(f"   ‚úÖ La copie est accessible - le probl√®me n'est pas le contenu")
            else:
                print(f"   ‚ùå La copie n'est pas accessible - le probl√®me est le nom ou la date")
                
        except Exception as e:
            print(f"   ‚ùå Erreur lors du test: {e}")
        
        # Test de date : V√©rifier si c'est un probl√®me de date de cr√©ation
        print(f"\nüìÖ ANALYSE DES DATES:")
        print("   Les fichiers accessibles ont-ils une date de cr√©ation diff√©rente?")
        print("   Les fichiers non accessibles sont-ils plus r√©cents?")
        
        ftp.quit()
        
        return True
        
    except Exception as e:
        print(f"‚ùå Erreur lors de l'analyse: {e}")
        return False

def main():
    """Fonction principale"""
    print("üöÄ ANALYSE DES DIFF√âRENCES ENTRE FICHIERS")
    print("=" * 60)
    
    print("üìã Ce script analyse pourquoi certains fichiers sont accessibles")
    print("   et d'autres non, malgr√© des permissions identiques.")
    print()
    
    success = analyze_file_differences()
    
    if success:
        print(f"\nüí° HYPOTH√àSES AVANC√âES:")
        print(f"   1. Restriction par date de cr√©ation (fichiers r√©cents bloqu√©s)")
        print(f"   2. Restriction par taille de fichier")
        print(f"   3. Restriction par contenu (signature de fichier)")
        print(f"   4. Configuration .htaccess cach√©e")
        print(f"   5. Cache du serveur web")
        print(f"   6. Restriction par utilisateur propri√©taire")
    
    print(f"\n‚úÖ Analyse termin√©e!")

if __name__ == "__main__":
    main()
