name: D√©ploiement Automatique

on:
  push:
    branches: [ CMTCH, main, master ]
  pull_request:
    branches: [ CMTCH, main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Configuration Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Installation des d√©pendances
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-asyncio httpx
    
    - name: Tests de base
      run: |
        python -c "import app; print('Application import√©e avec succ√®s')"
    
    - name: V√©rification de la syntaxe
      run: |
        python -m py_compile app.py
        echo "‚úÖ Syntaxe Python valide"

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/CMTCH' || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Configuration Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Installation des d√©pendances
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: D√©ploiement sur Railway (Alternative)
      if: false  # D√©sactiv√© par d√©faut
      uses: bervProject/railway-deploy@v1.0.0
      with:
        railway_token: ${{ secrets.RAILWAY_TOKEN }}
        service: ${{ secrets.RAILWAY_SERVICE }}
    
    - name: D√©ploiement sur Render
      uses: johnbeynon/render-deploy-action@v1.0.0
      with:
        service-id: ${{ secrets.RENDER_SERVICE_ID }}
        api-key: ${{ secrets.RENDER_API_KEY }}
    
    - name: Notification de d√©ploiement
      run: |
        echo "üöÄ D√©ploiement termin√© avec succ√®s!"
        echo "üìÖ Date: $(date)"
        echo "üîó Commit: ${{ github.sha }}"
        echo "üåê Plateforme: Render"
        echo "üåø Branche: ${{ github.ref_name }}"
