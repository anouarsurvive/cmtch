#!/usr/bin/env python3
"""
Script pour initialiser la base de donn√©es CMTCH avec des donn√©es de test
"""

import sqlite3
import os
from datetime import datetime, timedelta

def get_db_connection():
    """Cr√©e une connexion √† la base de donn√©es."""
    BASE_DIR = os.path.dirname(os.path.abspath(__file__))
    db_path = os.path.join(BASE_DIR, "cmtch.db")
    conn = sqlite3.connect(db_path)
    conn.row_factory = sqlite3.Row
    return conn

def init_database():
    """Initialise la base de donn√©es avec toutes les tables et donn√©es de test."""
    conn = get_db_connection()
    cur = conn.cursor()
    
    try:
        print("üöÄ Initialisation de la base de donn√©es CMTCH")
        print("=" * 50)
        
        # Cr√©er la table users si elle n'existe pas
        cur.execute("""
            CREATE TABLE IF NOT EXISTS users (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                username TEXT UNIQUE NOT NULL,
                password_hash TEXT NOT NULL,
                full_name TEXT NOT NULL,
                email TEXT,
                phone TEXT,
                ijin_number TEXT,
                birth_date TEXT,
                photo_path TEXT,
                is_admin INTEGER DEFAULT 0,
                validated INTEGER DEFAULT 0,
                is_trainer INTEGER DEFAULT 0,
                created_at TEXT DEFAULT CURRENT_TIMESTAMP
            )
        """)
        print("‚úÖ Table 'users' cr√©√©e/v√©rifi√©e")
        
        # Cr√©er la table articles si elle n'existe pas
        cur.execute("""
            CREATE TABLE IF NOT EXISTS articles (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                title TEXT NOT NULL,
                content TEXT NOT NULL,
                image_path TEXT,
                created_at TEXT DEFAULT CURRENT_TIMESTAMP
            )
        """)
        print("‚úÖ Table 'articles' cr√©√©e/v√©rifi√©e")
        
        # Cr√©er la table reservations si elle n'existe pas
        cur.execute("""
            CREATE TABLE IF NOT EXISTS reservations (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                user_id INTEGER NOT NULL,
                court_number INTEGER NOT NULL,
                date TEXT NOT NULL,
                start_time TEXT NOT NULL,
                end_time TEXT NOT NULL,
                created_at TEXT DEFAULT CURRENT_TIMESTAMP,
                FOREIGN KEY (user_id) REFERENCES users (id)
            )
        """)
        print("‚úÖ Table 'reservations' cr√©√©e/v√©rifi√©e")
        
        # V√©rifier s'il y a d√©j√† des utilisateurs
        cur.execute("SELECT COUNT(*) FROM users")
        user_count = cur.fetchone()[0]
        
        if user_count == 0:
            print("üÜï Cr√©ation de l'utilisateur admin...")
            # Cr√©er l'utilisateur admin
            admin_password = "admin"  # En production, utiliser un hash s√©curis√©
            cur.execute("""
                INSERT INTO users (username, password_hash, full_name, email, phone, ijin_number, birth_date, is_admin, validated)
                VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
            """, ("admin", admin_password, "Administrateur", "admin@cmtch.tn", "+21612345678", "ADMIN001", "1990-01-01", 1, 1))
            print("  ‚úÖ Utilisateur admin cr√©√©: admin / admin")
        
        # V√©rifier s'il y a d√©j√† des articles
        cur.execute("SELECT COUNT(*) FROM articles")
        article_count = cur.fetchone()[0]
        
        if article_count == 0:
            print("üÜï Cr√©ation d'articles de test...")
            
            # Articles de test avec des dates r√©centes
            test_articles = [
                {
                    "title": "Ouverture de la saison 2025",
                    "content": "Le Club Municipal de Tennis Chihia est ravi d'annoncer l'ouverture de la saison 2025. Cette ann√©e promet d'√™tre exceptionnelle avec de nouveaux √©quipements et des programmes d'entra√Ænement am√©lior√©s pour tous les niveaux. Nous avons investi dans la r√©novation de nos courts et l'achat de nouveaux √©quipements pour offrir une exp√©rience de tennis optimale √† tous nos membres.",
                    "created_at": (datetime.now() - timedelta(days=2)).isoformat()
                },
                {
                    "title": "Nouveau programme pour les jeunes",
                    "content": "Nous lan√ßons un nouveau programme sp√©cialement con√ßu pour les jeunes de 8 √† 16 ans. Ce programme combine technique, tactique et plaisir pour d√©velopper la passion du tennis chez nos futurs champions. Les entra√Ænements auront lieu les mercredis et samedis avec des groupes adapt√©s selon l'√¢ge et le niveau.",
                    "created_at": (datetime.now() - timedelta(days=5)).isoformat()
                },
                {
                    "title": "Tournoi interne du mois",
                    "content": "Le tournoi interne du mois de janvier aura lieu le week-end prochain. Tous les membres sont invit√©s √† participer. Inscriptions ouvertes jusqu'√† vendredi soir. Le tournoi se d√©roulera sur deux jours avec des cat√©gories par niveau. Des prix seront remis aux gagnants de chaque cat√©gorie.",
                    "created_at": (datetime.now() - timedelta(days=8)).isoformat()
                },
                {
                    "title": "Maintenance des courts",
                    "content": "Nos courts de tennis ont √©t√© enti√®rement r√©nov√©s pendant les vacances. Nouvelle surface, filets neufs et √©clairage am√©lior√© pour une exp√©rience de jeu optimale. Les travaux ont dur√© trois semaines et nous sommes fiers du r√©sultat. Venez tester la nouvelle surface d√®s maintenant !",
                    "created_at": (datetime.now() - timedelta(days=12)).isoformat()
                },
                {
                    "title": "Bienvenue aux nouveaux membres",
                    "content": "Nous souhaitons la bienvenue √† tous nos nouveaux membres qui ont rejoint le club ce mois-ci. N'h√©sitez pas √† participer aux activit√©s et √† vous int√©grer dans notre communaut√© tennis. Des sessions d'int√©gration sont organis√©es chaque samedi matin pour vous familiariser avec les installations et rencontrer d'autres membres.",
                    "created_at": (datetime.now() - timedelta(days=15)).isoformat()
                }
            ]
            
            # Ins√©rer les articles
            for article in test_articles:
                cur.execute("""
                    INSERT INTO articles (title, content, created_at)
                    VALUES (?, ?, ?)
                """, (article["title"], article["content"], article["created_at"]))
                print(f"  ‚úÖ Article cr√©√©: {article['title']}")
            
            print(f"üéâ {len(test_articles)} articles de test cr√©√©s avec succ√®s!")
            
        else:
            print(f"‚ÑπÔ∏è  {article_count} articles existent d√©j√† dans la base")
        
        # Commit des changements
        conn.commit()
        
        # Afficher un r√©sum√©
        print("\nüìä R√©sum√© de la base de donn√©es:")
        cur.execute("SELECT COUNT(*) FROM users")
        user_count = cur.fetchone()[0]
        cur.execute("SELECT COUNT(*) FROM articles")
        article_count = cur.fetchone()[0]
        cur.execute("SELECT COUNT(*) FROM reservations")
        reservation_count = cur.fetchone()[0]
        
        print(f"  üë• Utilisateurs: {user_count}")
        print(f"  üì∞ Articles: {article_count}")
        print(f"  üìÖ R√©servations: {reservation_count}")
        
        # Afficher les articles r√©cents
        print("\nüìã Articles r√©cents:")
        cur.execute("SELECT id, title, created_at FROM articles ORDER BY datetime(created_at) DESC LIMIT 3")
        articles = cur.fetchall()
        
        for article in articles:
            print(f"  ID {article['id']}: {article['title']} ({article['created_at']})")
            
        print("\nüîë Identifiants de connexion:")
        print("  Admin: admin / admin")
        print("  (Cr√©ez d'autres comptes via l'inscription)")
        
    except Exception as e:
        print(f"‚ùå Erreur lors de l'initialisation: {e}")
        conn.rollback()
    finally:
        conn.close()

if __name__ == "__main__":
    init_database()
    print("=" * 50)
    print("‚úÖ Initialisation termin√©e")
