#!/usr/bin/env python3
"""
Script pour cr√©er des articles de test dans la base de donn√©es CMTCH
"""

import sqlite3
import os
from datetime import datetime, timedelta

def get_db_connection():
    """Cr√©e une connexion √† la base de donn√©es."""
    BASE_DIR = os.path.dirname(os.path.abspath(__file__))
    db_path = os.path.join(BASE_DIR, "cmtch.db")
    conn = sqlite3.connect(db_path)
    conn.row_factory = sqlite3.Row
    return conn

def create_test_articles():
    """Cr√©e des articles de test dans la base de donn√©es."""
    conn = get_db_connection()
    cur = conn.cursor()
    
    try:
        # V√©rifier si la table articles existe
        cur.execute("""
            SELECT name FROM sqlite_master 
            WHERE type='table' AND name='articles'
        """)
        
        if not cur.fetchone():
            print("‚ùå Table 'articles' non trouv√©e. Cr√©ation...")
            cur.execute("""
                CREATE TABLE articles (
                    id INTEGER PRIMARY KEY AUTOINCREMENT,
                    title TEXT NOT NULL,
                    content TEXT NOT NULL,
                    image_path TEXT,
                    created_at TEXT DEFAULT CURRENT_TIMESTAMP
                )
            """)
            print("‚úÖ Table 'articles' cr√©√©e")
        
        # V√©rifier s'il y a d√©j√† des articles
        cur.execute("SELECT COUNT(*) FROM articles")
        count = cur.fetchone()[0]
        print(f"üì∞ Articles existants: {count}")
        
        if count == 0:
            print("üÜï Cr√©ation d'articles de test...")
            
            # Articles de test
            test_articles = [
                {
                    "title": "Ouverture de la saison 2025",
                    "content": "Le Club Municipal de Tennis Chihia est ravi d'annoncer l'ouverture de la saison 2025. Cette ann√©e promet d'√™tre exceptionnelle avec de nouveaux √©quipements et des programmes d'entra√Ænement am√©lior√©s pour tous les niveaux.",
                    "created_at": (datetime.now() - timedelta(days=2)).isoformat()
                },
                {
                    "title": "Nouveau programme pour les jeunes",
                    "content": "Nous lan√ßons un nouveau programme sp√©cialement con√ßu pour les jeunes de 8 √† 16 ans. Ce programme combine technique, tactique et plaisir pour d√©velopper la passion du tennis chez nos futurs champions.",
                    "created_at": (datetime.now() - timedelta(days=5)).isoformat()
                },
                {
                    "title": "Tournoi interne du mois",
                    "content": "Le tournoi interne du mois de janvier aura lieu le week-end prochain. Tous les membres sont invit√©s √† participer. Inscriptions ouvertes jusqu'√† vendredi soir.",
                    "created_at": (datetime.now() - timedelta(days=8)).isoformat()
                },
                {
                    "title": "Maintenance des courts",
                    "content": "Nos courts de tennis ont √©t√© enti√®rement r√©nov√©s pendant les vacances. Nouvelle surface, filets neufs et √©clairage am√©lior√© pour une exp√©rience de jeu optimale.",
                    "created_at": (datetime.now() - timedelta(days=12)).isoformat()
                },
                {
                    "title": "Bienvenue aux nouveaux membres",
                    "content": "Nous souhaitons la bienvenue √† tous nos nouveaux membres qui ont rejoint le club ce mois-ci. N'h√©sitez pas √† participer aux activit√©s et √† vous int√©grer dans notre communaut√© tennis.",
                    "created_at": (datetime.now() - timedelta(days=15)).isoformat()
                }
            ]
            
            # Ins√©rer les articles
            for article in test_articles:
                cur.execute("""
                    INSERT INTO articles (title, content, created_at)
                    VALUES (?, ?, ?)
                """, (article["title"], article["content"], article["created_at"]))
                print(f"  ‚úÖ Article cr√©√©: {article['title']}")
            
            conn.commit()
            print(f"üéâ {len(test_articles)} articles de test cr√©√©s avec succ√®s!")
            
        else:
            print("‚ÑπÔ∏è  Des articles existent d√©j√† dans la base")
            
        # Afficher tous les articles
        print("\nüìã Liste des articles dans la base:")
        cur.execute("SELECT id, title, created_at FROM articles ORDER BY datetime(created_at) DESC")
        articles = cur.fetchall()
        
        for article in articles:
            print(f"  ID {article['id']}: {article['title']} ({article['created_at']})")
            
    except Exception as e:
        print(f"‚ùå Erreur: {e}")
        conn.rollback()
    finally:
        conn.close()

if __name__ == "__main__":
    print("üöÄ Script de cr√©ation d'articles de test CMTCH")
    print("=" * 50)
    create_test_articles()
    print("=" * 50)
    print("‚úÖ Script termin√©")
