#!/usr/bin/env python3
"""
Script pour utiliser les vraies images qui sont d√©j√† dans le dossier FTP.
"""

import sys
import os

# Ajouter le r√©pertoire courant au path pour importer database
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from database import get_db_connection

def use_real_images_from_ftp():
    """Utilise les vraies images qui sont d√©j√† dans le dossier FTP"""
    print("üîß UTILISATION DES VRAIES IMAGES DU FTP:")
    
    try:
        conn = get_db_connection()
        
        if hasattr(conn, '_is_mysql'):
            print("üîå Connexion MySQL √©tablie")
        else:
            print("‚ùå Connexion SQLite √©tablie (pas MySQL)")
            return
        
        cur = conn.cursor()
        
        # V√©rifier l'√©tat actuel des articles
        print("\nüìä √âTAT ACTUEL:")
        cur.execute("SELECT COUNT(*) FROM articles WHERE image_path = '/static/article_images/default_article.jpg'")
        default_images_count = cur.fetchone()[0]
        print(f"   Articles avec image par d√©faut: {default_images_count}")
        
        # Lister tous les articles avec leurs chemins d'images
        print(f"\nüìù ARTICLES AVANT CORRECTION:")
        cur.execute("SELECT id, title, image_path FROM articles ORDER BY id")
        articles = cur.fetchall()
        
        for article in articles:
            article_id, title, image_path = article
            print(f"   Article {article_id}: {title}")
            print(f"     Image actuelle: {image_path}")
        
        # Mapper les articles aux vraies images disponibles
        print(f"\nüîÑ CORRECTION VERS LES VRAIES IMAGES:")
        
        # Images disponibles dans le FTP (d'apr√®s le diagnostic)
        available_images = [
            "39cebba8134541a4997e9b3a4029a4fe.jpg",
            "61c8f2b8595948d08b6e8dbc1517a963.jpg", 
            "ed9b5c9611f14f559eb906ec0e2e1fbb.jpg"
        ]
        
        print(f"   üì∏ Images disponibles dans le FTP:")
        for i, img in enumerate(available_images, 1):
            print(f"     {i}. {img}")
        
        # Remplacer l'image par d√©faut par les vraies images
        articles_updated = 0
        
        for i, article in enumerate(articles):
            article_id, title, image_path = article
            
            if image_path == "/static/article_images/default_article.jpg":
                # Utiliser une image disponible
                if i < len(available_images):
                    real_image = f"/static/article_images/{available_images[i]}"
                    
                    # Mettre √† jour l'article
                    cur.execute("UPDATE articles SET image_path = %s WHERE id = %s", (real_image, article_id))
                    articles_updated += 1
                    
                    print(f"   ‚úÖ Article {article_id}: {real_image}")
                else:
                    print(f"   ‚ö†Ô∏è Article {article_id}: Pas d'image disponible, garde l'image par d√©faut")
        
        print(f"\n   üìä {articles_updated} articles mis √† jour avec de vraies images")
        
        # Valider les changements
        conn.commit()
        print("üíæ Changements valid√©s en base de donn√©es")
        
        # V√©rifier l'√©tat apr√®s correction
        print(f"\nüìä √âTAT APR√àS CORRECTION:")
        cur.execute("SELECT id, title, image_path FROM articles ORDER BY id")
        articles_after = cur.fetchall()
        
        for article in articles_after:
            article_id, title, image_path = article
            print(f"   Article {article_id}: {title}")
            print(f"     Nouvelle image: {image_path}")
        
        conn.close()
        
        return articles_updated
        
    except Exception as e:
        print(f"‚ùå Erreur lors de la correction: {e}")
        if 'conn' in locals():
            conn.rollback()
            conn.close()
        return 0

def main():
    """Fonction principale"""
    print("üöÄ UTILISATION DES VRAIES IMAGES DU FTP")
    print("=" * 60)
    
    print("üìã Ce script va remplacer l'image par d√©faut par les vraies images")
    print("   qui sont d√©j√† disponibles dans le dossier FTP:")
    print("   /public_html/static/article_images/")
    print()
    
    # Demander confirmation
    confirm = input("‚ùì Continuer avec la correction? (o/n): ").strip().lower()
    if not confirm.startswith('o'):
        print("‚ùå Correction annul√©e")
        return
    
    # Effectuer la correction
    updated_count = use_real_images_from_ftp()
    
    if updated_count > 0:
        print(f"\nüéâ Correction termin√©e!")
        print(f"   - {updated_count} articles mis √† jour avec de vraies images")
        print(f"   - Toutes les images pointent vers des fichiers existants dans le FTP")
        print(f"   - Plus d'erreurs 404 sur les images d'articles")
        print(f"\nüìù Prochaine √©tape: V√©rifier que le site fonctionne")
    else:
        print("\n‚ö†Ô∏è Aucune correction effectu√©e")
    
    print("\n‚úÖ Op√©ration termin√©e!")

if __name__ == "__main__":
    main()
